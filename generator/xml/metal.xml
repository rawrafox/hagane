<framework module="metal">
  <use>core_foundation::*</use>
  <use>foundation::*</use>
  <use>legacy_metal::*</use>

  <enumeration name="MTLCompareFunction" type="NSUInteger">
    <value name="MTLCompareFunctionNever" value="0" />
    <value name="MTLCompareFunctionLess" value="1" />
    <value name="MTLCompareFunctionEqual" value="2" />
    <value name="MTLCompareFunctionLessEqual" value="3" />
    <value name="MTLCompareFunctionGreater" value="4" />
    <value name="MTLCompareFunctionNotEqual" value="5" />
    <value name="MTLCompareFunctionGreaterEqual" value="6" />
    <value name="MTLCompareFunctionAlways" value="7" />
  </enumeration>

  <enumeration name="MTLCPUCacheMode" type="NSUInteger">
    <value name="MTLCPUCacheModeDefaultCache" value="0" />
    <value name="MTLCPUCacheModeWriteCombined" value="1" />
  </enumeration>

  <enumeration name="MTLCullMode" type="NSUInteger">
    <value name="MTLCullModeNone" value="0" />
    <value name="MTLCullModeFront" value="1" />
    <value name="MTLCullModeBack" value="2" />
  </enumeration>

  <enumeration name="MTLIndexType" type="NSUInteger">
    <value name="MTLIndexTypeUInt16" value="0" />
    <value name="MTLIndexTypeUInt32" value="1" />
  </enumeration>

  <enumeration name="MTLPrimitiveType" type="NSUInteger">
    <value name="MTLPrimitiveTypePoint" value="0" />
    <value name="MTLPrimitiveTypeLine" value="1" />
    <value name="MTLPrimitiveTypeLineStrip" value="2" />
    <value name="MTLPrimitiveTypeTriangle" value="3" />
    <value name="MTLPrimitiveTypeTriangleStrip" value="4" />
  </enumeration>

  <enumeration name="MTLStorageMode" type="NSUInteger">
    <value name="MTLStorageModeShared" value="0" />
    <value name="MTLStorageModeManaged" value="1" />
    <value name="MTLStorageModePrivate" value="2" />
  </enumeration>

  <enumeration name="MTLWinding" type="NSUInteger">
    <value name="MTLWindingClockwise" value="0" />
    <value name="MTLWindingCounterClockwise" value="1" />
  </enumeration>

  <!-- TODO: Missing -->

  <!-- Protocols -->

  <protocol name="MTLBlitCommandEncoder" inherits="MTLCommandEncoder, NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLBuffer" inherits="MTLResource, NSObject">
    <!-- Creating a Texture That Shares Buffer Data -->
    <!-- TODO: newTextureWithDescriptor:offset:bytesPerRow: -->

    <!-- Locating the Buffer’s Storage -->
    <method selector="contents">
      <return type="*mut std::os::raw::c_void" />
    </method>
    
    <!-- Invalidating the Buffer’s Storage -->
    <!-- TODO: Fix NSRange
    <method selector="didModifyRange:">
      <argument name="range" type="NSRange" />
    </method>
    -->

    <!-- Properties -->
    <property name="length" type="NSUInteger" read-only />
    
    <!-- Instance Methods -->
    <!-- TODO: Fix NSRange
    <method selector="addDebugMarker:range:">
      <argument name="marker" protocol="NSString" />
      <argument name="range" type="NSRange" />
    </method>
    -->
    <method selector="removeAllDebugMarkers" />
  </protocol>

  <!-- TODO: MTLCommandBuffer -->
  <!-- TODO: MTLCommandEncoder -->
  <!-- TODO: MTLCommandQueue -->

  <protocol name="MTLComputeCommandEncoder" inherits="MTLCommandEncoder, NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLComputePipelineState" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLDepthStencilState" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <!-- TODO: MTLDevice -->

  <protocol name="MTLDrawable" inherits="NSObject">
    <method selector="present" />
    <method selector="presentAtTime:">
      <argument name="presentationTime" type="CFTimeInterval" />
    </method>
  </protocol>

  <protocol name="MTLRenderPipelineState" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLResource" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <!-- TODO: More missing -->

  <protocol name="MTLTexture" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>
</framework>
