<framework module="model_io">
  <use>foundation::*</use>
  <use>simd::*</use>

  <extern framework="ModelIO">
    <static name="MDLVertexAttributeAnisotropy" protocol="NSString" public />
    <static name="MDLVertexAttributeBinormal" protocol="NSString" public />
    <static name="MDLVertexAttributeBitangent" protocol="NSString" public />
    <static name="MDLVertexAttributeColor" protocol="NSString" public />
    <static name="MDLVertexAttributeEdgeCrease" protocol="NSString" public />
    <static name="MDLVertexAttributeJointIndices" protocol="NSString" public />
    <static name="MDLVertexAttributeJointWeights" protocol="NSString" public />
    <static name="MDLVertexAttributeNormal" protocol="NSString" public />
    <static name="MDLVertexAttributeOcclusionValue" protocol="NSString" public />
    <static name="MDLVertexAttributePosition" protocol="NSString" public />
    <static name="MDLVertexAttributeShadingBasisU" protocol="NSString" public />
    <static name="MDLVertexAttributeShadingBasisV" protocol="NSString" public />
    <static name="MDLVertexAttributeSubdivisionStencil" protocol="NSString" public />
    <static name="MDLVertexAttributeTangent" protocol="NSString" public />
    <static name="MDLVertexAttributeTextureCoordinate" protocol="NSString" public />
  </extern>

  <enumeration name="MDLCameraProjection" type="NSUInteger">
    <value name="MDLCameraProjectionPerspective" value="0" />
    <value name="MDLCameraProjectionOrthographic" value="1" />
  </enumeration>

  <enumeration name="MDLGeometryType" type="NSInteger">
    <value name="MDLGeometryTypePoints" value="0" />
    <value name="MDLGeometryTypeLines" value="1" />
    <value name="MDLGeometryTypeTriangles" value="2" />
    <value name="MDLGeometryTypeTriangleStrips" value="3" />
    <value name="MDLGeometryTypeQuads" value="4" />
    <value name="MDLGeometryTypeVariableTopology" value="5" />
  </enumeration>

  <enumeration name="MDLIndexBitDepth" type="NSUInteger">
    <value name="MDLIndexBitDepthInvalid" value="0" />
    <value name="MDLIndexBitDepthUInt8" value="8" />
    <value name="MDLIndexBitDepthUInt16" value="16" />
    <value name="MDLIndexBitDepthUInt32" value="32" />
  </enumeration>

  <enumeration name="MDLMeshBufferType" type="NSUInteger">
    <value name="MDLMeshBufferTypeVertex" value="1" />
    <value name="MDLMeshBufferTypeIndex" value="2" />
  </enumeration>

  <enumeration name="MDLVertexFormat" type="NSUInteger">
    <value name="MDLVertexFormatInvalid" value="0" />
    <value name="MDLVertexFormatPackedBit" value="0x1000" />
    <value name="MDLVertexFormatUCharBits" value="0x10000" />
    <value name="MDLVertexFormatCharBits" value="0x20000" />
    <value name="MDLVertexFormatUCharNormalizedBits" value="0x30000" />
    <value name="MDLVertexFormatCharNormalizedBits" value="0x40000" />
    <value name="MDLVertexFormatUShortBits" value="0x50000" />
    <value name="MDLVertexFormatShortBits" value="0x60000" />
    <value name="MDLVertexFormatUShortNormalizedBits" value="0x70000" />
    <value name="MDLVertexFormatShortNormalizedBits" value="0x80000" />
    <value name="MDLVertexFormatUIntBits" value="0x90000" />
    <value name="MDLVertexFormatIntBits" value="0xA0000" />
    <value name="MDLVertexFormatHalfBits" value="0xB0000" />
    <value name="MDLVertexFormatFloatBits" value="0xC0000" />
    <value name="MDLVertexFormatUChar" value="MDLVertexFormatUCharBits.bits | 1" />
    <value name="MDLVertexFormatUChar2" value="MDLVertexFormatUCharBits.bits | 2" />
    <value name="MDLVertexFormatUChar3" value="MDLVertexFormatUCharBits.bits | 3" />
    <value name="MDLVertexFormatUChar4" value="MDLVertexFormatUCharBits.bits | 4" />
    <value name="MDLVertexFormatChar" value="MDLVertexFormatCharBits.bits | 1" />
    <value name="MDLVertexFormatChar2" value="MDLVertexFormatCharBits.bits | 2" />
    <value name="MDLVertexFormatChar3" value="MDLVertexFormatCharBits.bits | 3" />
    <value name="MDLVertexFormatChar4" value="MDLVertexFormatCharBits.bits | 4" />
    <value name="MDLVertexFormatUCharNormalized" value="MDLVertexFormatUCharNormalizedBits.bits | 1" />
    <value name="MDLVertexFormatUChar2Normalized" value="MDLVertexFormatUCharNormalizedBits.bits | 2" />
    <value name="MDLVertexFormatUChar3Normalized" value="MDLVertexFormatUCharNormalizedBits.bits | 3" />
    <value name="MDLVertexFormatUChar4Normalized" value="MDLVertexFormatUCharNormalizedBits.bits | 4" />
    <value name="MDLVertexFormatCharNormalized" value="MDLVertexFormatCharNormalizedBits.bits | 1" />
    <value name="MDLVertexFormatChar2Normalized" value="MDLVertexFormatCharNormalizedBits.bits | 2" />
    <value name="MDLVertexFormatChar3Normalized" value="MDLVertexFormatCharNormalizedBits.bits | 3" />
    <value name="MDLVertexFormatChar4Normalized" value="MDLVertexFormatCharNormalizedBits.bits | 4" />
    <value name="MDLVertexFormatUShort" value="MDLVertexFormatUShortBits.bits | 1" />
    <value name="MDLVertexFormatUShort2" value="MDLVertexFormatUShortBits.bits | 2" />
    <value name="MDLVertexFormatUShort3" value="MDLVertexFormatUShortBits.bits | 3" />
    <value name="MDLVertexFormatUShort4" value="MDLVertexFormatUShortBits.bits | 4" />
    <value name="MDLVertexFormatShort" value="MDLVertexFormatShortBits.bits | 1" />
    <value name="MDLVertexFormatShort2" value="MDLVertexFormatShortBits.bits | 2" />
    <value name="MDLVertexFormatShort3" value="MDLVertexFormatShortBits.bits | 3" />
    <value name="MDLVertexFormatShort4" value="MDLVertexFormatShortBits.bits | 4" />
    <value name="MDLVertexFormatUShortNormalized" value="MDLVertexFormatUShortNormalizedBits.bits | 1" />
    <value name="MDLVertexFormatUShort2Normalized" value="MDLVertexFormatUShortNormalizedBits.bits | 2" />
    <value name="MDLVertexFormatUShort3Normalized" value="MDLVertexFormatUShortNormalizedBits.bits | 3" />
    <value name="MDLVertexFormatUShort4Normalized" value="MDLVertexFormatUShortNormalizedBits.bits | 4" />
    <value name="MDLVertexFormatShortNormalized" value="MDLVertexFormatShortNormalizedBits.bits | 1" />
    <value name="MDLVertexFormatShort2Normalized" value="MDLVertexFormatShortNormalizedBits.bits | 2" />
    <value name="MDLVertexFormatShort3Normalized" value="MDLVertexFormatShortNormalizedBits.bits | 3" />
    <value name="MDLVertexFormatShort4Normalized" value="MDLVertexFormatShortNormalizedBits.bits | 4" />
    <value name="MDLVertexFormatUInt" value="MDLVertexFormatUIntBits.bits | 1" />
    <value name="MDLVertexFormatUInt2" value="MDLVertexFormatUIntBits.bits | 2" />
    <value name="MDLVertexFormatUInt3" value="MDLVertexFormatUIntBits.bits | 3" />
    <value name="MDLVertexFormatUInt4" value="MDLVertexFormatUIntBits.bits | 4" />
    <value name="MDLVertexFormatInt" value="MDLVertexFormatIntBits.bits | 1" />
    <value name="MDLVertexFormatInt2" value="MDLVertexFormatIntBits.bits | 2" />
    <value name="MDLVertexFormatInt3" value="MDLVertexFormatIntBits.bits | 3" />
    <value name="MDLVertexFormatInt4" value="MDLVertexFormatIntBits.bits | 4" />
    <value name="MDLVertexFormatHalf" value="MDLVertexFormatHalfBits.bits | 1" />
    <value name="MDLVertexFormatHalf2" value="MDLVertexFormatHalfBits.bits | 2" />
    <value name="MDLVertexFormatHalf3" value="MDLVertexFormatHalfBits.bits | 3" />
    <value name="MDLVertexFormatHalf4" value="MDLVertexFormatHalfBits.bits | 4" />
    <value name="MDLVertexFormatFloat" value="MDLVertexFormatFloatBits.bits | 1" />
    <value name="MDLVertexFormatFloat2" value="MDLVertexFormatFloatBits.bits | 2" />
    <value name="MDLVertexFormatFloat3" value="MDLVertexFormatFloatBits.bits | 3" />
    <value name="MDLVertexFormatFloat4" value="MDLVertexFormatFloatBits.bits | 4" />
    <value name="MDLVertexFormatInt1010102Normalized" value="MDLVertexFormatIntBits.bits | MDLVertexFormatPackedBit.bits | 4" />
    <value name="MDLVertexFormatUInt1010102Normalized" value="MDLVertexFormatUIntBits.bits | MDLVertexFormatPackedBit.bits | 4" />
  </enumeration>

  <!-- Structures -->
  <structure name="MDLAxisAlignedBoundingBox">
    <field name="maxBounds" type="[f32; 3]" /> <!-- TODO: vector_float3 -->
    <field name="minBounds" type="[f32; 3]" /> <!-- TODO: vector_float3 -->
  </structure>

  <!-- Classes -->
  <class name="MDLAreaLight" inherits="MDLNamed, MDLPhysicallyPlausibleLight, MDLLight, MDLObject, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLAsset" inherits="NSObject">
    <initializer selector="init" />

    <!-- Creating an Asset -->
    <!-- TODO: Incomplete -->
    <initializer selector="initWithURL:">
      <argument name="URL" protocol="NSURL" />
    </initializer>

    <initializer selector="initWithURL:vertexDescriptor:bufferAllocator:">
      <argument name="URL" protocol="NSURL" />
      <argument name="vertexDescriptor" protocol="MDLVertexDescriptor" />
      <argument name="bufferAllocator" protocol="MDLMeshBufferAllocator" />
    </initializer>

    <!-- Exporting an Asset -->
    <!-- TODO: Incomplete -->

    <method selector="exportAssetToURL:">
      <argument name="URL" protocol="NSURL" />
      <return type="bool" />
    </method>

    <method selector="exportAssetToURL:error:">
      <argument name="URL" protocol="NSURL" />
      <argument name="error" error="NSError" />
      <return type="bool" />
    </method>

    <!-- Working with Asset Content -->
    <method selector="objectAtIndex:">
      <argument name="index" type="NSUInteger" />
      <return generic="MDLObject" />
    </method>

    <method selector="objectAtIndexedSubscript:">
      <argument name="index" type="NSUInteger" />
      <return generic="MDLObject" />
    </method>

    <property name="count" type="NSUInteger" read-only />

    <method selector="addObject:">
      <argument name="object" protocol="MDLObject" />
    </method>
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLCamera" inherits="MDLNamed, MDLObject, NSObject">
    <initializer selector="init" />

    <!-- Managing Camera Position and Orientation -->
    <method selector="frameBoundingBox:setNearAndFar:">
      <argument name="boundingBox" type="MDLAxisAlignedBoundingBox" />
      <argument name="setNearAndFar" type="bool" />
    </method>

    <method selector="lookAt:">
      <argument name="focusPosition" type="vector_float3" />
    </method>

    <method selector="lookAt:from:">
      <argument name="focusPosition" type="vector_float3" />
      <argument name="cameraPosition" type="vector_float3" />
    </method>

    <!-- Managing Camera Perspective -->
    <property name="projectionMatrix" type="matrix_float4x4" read-only />
    <property name="nearVisibilityDistance" type="f32" />
    <property name="farVisibilityDistance" type="f32" />
    <property name="fieldOfView" type="f32" />

    <method selector="rayTo:forViewPort:">
      <argument name="pixel" type="vector_int2" />
      <argument name="size" type="vector_int2" />
      <return type="vector_float3" />
    </method>

    <property name="worldToMetersConversionScale" type="f32" />

    <!-- Modeling a Physical Lens -->
    <!-- TODO: Incomplete -->

    <!-- Modeling a Physical Imaging Surface -->
    <!-- TODO: Incomplete -->

    <!-- Importing Camera Objects from SceneKit -->
    <!-- TODO: Incomplete -->

    <!-- Instance Properties -->
    <property name="projection" type="MDLCameraProjection" />

  </class>

  <class name="MDLCheckerboardTexture" inherits="MDLNamed, MDLTexture, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLColorSwatchTexture" inherits="MDLNamed, MDLTexture, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLLight" inherits="MDLNamed, MDLObject, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLLightProbe" inherits="MDLNamed, MDLLight, MDLObject, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMaterial" inherits="MDLNamed, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMaterialProperty" inherits="MDLNamed, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMaterialPropertyConnection" inherits="MDLNamed, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMaterialPropertyGraph" inherits="MDLNamed, MDLMaterialPropertyNode, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMaterialPropertyNode" inherits="MDLNamed, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMesh" inherits="MDLNamed, MDLObject, NSObject">
    <!-- Creating a Custom Mesh -->
    <initializer selector="initWithVertexBuffer:vertexCount:descriptor:submeshes:">
      <argument name="vertexBuffer" protocol="MDLMeshBuffer" />
      <argument name="vertexCount" type="NSUInteger" />
      <argument name="descriptor" protocol="MDLVertexDescriptor" />
      <argument name="submeshes" protocol="NSArray" elements="MDLSubmesh" />
    </initializer>
    <!-- TODO: Incomplete -->

    <!-- Working with Vertex Data -->
    <!-- TODO: Incomplete -->
    <property name="submeshes" protocol="NSMutableArray" element="MDLSubmesh" />
    <property name="vertexBuffers" protocol="NSArray" element="MDLMeshBuffer" />
    <property name="vertexCount" type="NSUInteger" />
    <property name="vertexDescriptor" protocol="MDLVertexDescriptor" />
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMeshBufferData" inherits="MDLMeshBuffer, NSObject">
    <!-- Creating a Buffer -->
    <initializer selector="initWithType:data:">
      <argument name="bufferType" type="MDLMeshBufferType" />
      <argument name="data" protocol="NSData" />
    </initializer>

    <initializer selector="initWithType:length:">
      <argument name="bufferType" type="MDLMeshBufferType" />
      <argument name="length" type="NSUInteger" />
    </initializer>

    <!-- Accessing a Buffer’s Data -->
    <property name="data" protocol="NSData" read-only />
  </class>

  <class name="MDLMeshBufferDataAllocator" inherits="MDLMeshBufferAllocator, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLMeshBufferMap" inherits="NSObject">
    <!-- TODO: initWithBytes:deallocator: -->
    <property name="bytes" type="*const std::os::raw::c_void" read-only />
  </class>

  <class name="MDLMeshBufferZoneDefault" inherits="MDLMeshBufferZone, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLNoiseTexture" inherits="MDLNamed, MDLTexture, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLNormalMapTexture" inherits="MDLNamed, MDLTexture, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLObject" inherits="MDLNamed, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLObjectContainer" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLPhotometricLight" inherits="MDLNamed, MDLPhysicallyPlausibleLight, MDLLight, MDLObject, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLPhysicallyPlausibleLight" inherits="MDLNamed, MDLLight, MDLObject, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLPhysicallyPlausibleScatteringFunction" inherits="MDLNamed, MDLScatteringFunction, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLScatteringFunction" inherits="MDLNamed, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLSkyCubeTexture" inherits="MDLNamed, MDLTexture, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLStereoscopicCamera" inherits="MDLNamed, MDLCamera, MDLObject, NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLSubmesh" inherits="MDLNamed, NSObject">
    <!-- Creating a Submesh -->
    <initializer selector="initWithIndexBuffer:indexCount:indexType:geometryType:material:">
      <argument name="indexBuffer" protocol="MDLMeshBuffer" />
      <argument name="indexCount" type="NSUInteger" />
      <argument name="indexType" type="MDLIndexBitDepth" />
      <argument name="geometryType" type="MDLGeometryType" />
      <argument name="material" protocol="MDLMaterial" />
    </initializer>
    <!-- TODO: Incomplete -->

    <!-- Working with a Submesh’s Index Buffer -->
    <property name="indexBuffer" protocol="MDLMeshBuffer" read-only />
    <property name="indexCount" type="NSUInteger" read-only />
    <property name="indexType" type="MDLIndexBitDepth" read-only />
    <property name="geometryType" type="MDLGeometryType" read-only />
    <property name="topology" protocol="MDLSubmeshTopology" />

    <!-- Associating Materials with a Submesh -->
    <property name="material" protocol="MDLMaterial" />

    <!-- Identifying a Submesh -->
    <!-- Actually in MDLNamed -->

    <!-- Importing Submesh Objects from SceneKit -->
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLSubmeshTopology" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLTexture" inherits="MDLNamed, NSObject">
    <!-- Loading Textures from a Bundle -->
    <!-- TODO: Incomplete -->

    <!-- Creating Textures -->
    <!-- TODO: Incomplete -->

    <!-- Exporting Textures -->
    <!-- TODO: Incomplete -->

    <!-- Accessing Texture Data -->
    <!-- TODO: Incomplete -->

    <!-- Examining Texture Attributes -->
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLTextureFilter" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLTextureSampler" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLTransform" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLURLTexture" inherits="MDLNamed, MDLTexture, NSObject">
    <!-- Creating a URL Texture -->
    <initializer selector="initWithURL:name:">
      <argument name="URL" protocol="NSURL" />
      <argument name="name" protocol="NSString" />
    </initializer>

    <!-- Inspecting the Texture URL -->
    <property name="URL" protocol="NSURL" />

  </class>

  <class name="MDLVertexAttribute" inherits="NSObject">
    <!-- Creating a Vertex Attribute -->
    <initializer selector="initWithName:format:offset:bufferIndex:">
      <argument name="name" protocol="NSString" />
      <argument name="format" type="MDLVertexFormat" />
      <argument name="offset" type="NSUInteger" />
      <argument name="bufferIndex" type="NSUInteger" />
    </initializer>

    <!-- Inspecting a Vertex Attribute -->
    <property name="name" protocol="NSString" />
    <property name="format" type="MDLVertexFormat" />
    <property name="offset" type="NSUInteger" />
    <property name="bufferIndex" type="NSUInteger" />
    <property name="initializationValue" type="[f32; 4]" />
  </class>

  <class name="MDLVertexAttributeData" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <class name="MDLVertexBufferLayout" inherits="NSObject">
    <!-- Working with Layout Information -->
    <property name="stride" type="NSUInteger" />

    <!-- Initializers -->
    <initializer selector="initWithStride:">
      <argument name="stride" type="NSUInteger" />
    </initializer>
  </class>

  <class name="MDLVertexDescriptor" inherits="NSObject">
    <initializer selector="init" />

    <!-- Working with Vertex Attributes -->
    <property name="attributes" protocol="NSMutableArray" element="MDLVertexAttribute" />

    <method selector="attributeNamed:">
      <argument name="name" protocol="NSString" />
    </method>

    <method selector="addOrReplaceAttribute:">
      <argument name="attribute" protocol="MDLVertexAttribute" />
    </method>

    <method selector="setPackedOffsets" />

    <!-- Working with Vertex Buffer Layouts -->
    <property name="layouts" protocol="NSMutableArray" element="MDLVertexBufferLayout" />
    <method selector="setPackedStrides" />

    <!-- Resetting a Vertex Descriptor -->
    <method selector="reset" />

    <!-- Copying a Vertex Descriptor -->
    <initializer selector="initWithVertexDescriptor:">
      <argument name="vertexDescriptor" protocol="MDLVertexDescriptor" />
    </initializer>

    <!-- Instance Methods -->
    <method selector="removeAttributeNamed:">
      <argument name="attribute" protocol="MDLVertexAttribute" />
    </method>
  </class>

  <class name="MDLVoxelArray" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </class>

  <!-- Protocols -->
  <protocol name="MDLComponent" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </protocol>

  <protocol name="MDLLightProbeIrradianceDataSource" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </protocol>

  <protocol name="MDLMeshBuffer" inherits="NSObject">
    <!-- TODO: Incomplete -->

    <method selector="map">
      <return protocol="MDLMeshBufferMap" />
    </method>
    <property name="length" type="NSUInteger" />
  </protocol>

  <protocol name="MDLMeshBufferAllocator" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </protocol>

  <protocol name="MDLMeshBufferZone" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </protocol>

  <protocol name="MDLNamed" inherits="NSObject">
    <!-- Naming an Object -->
    <property name="name" protocol="NSString" />
  </protocol>

  <protocol name="MDLObjectContainerComponent" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </protocol>

  <protocol name="MDLTransformComponent" inherits="NSObject">
    <!-- TODO: Incomplete -->
  </protocol>
</framework>