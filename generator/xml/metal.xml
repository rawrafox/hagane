<framework module="metal">
  <use>core_foundation::*</use>
  <use>foundation::*</use>

  <extern framework="Metal">
    <!-- Obtaining all Devices -->
    <function name="MTLCopyAllDevices">
      <return type="*mut std::os::raw::c_void" />
    </function>

    <!-- Obtaining the Preferred Device -->
    <function name="MTLCreateSystemDefaultDevice">
      <return type="*mut std::os::raw::c_void" />
    </function>
    
    <!-- Creating an Image Location or Region -->
    <!-- TODO: MTLOriginMake -->
    <!-- TODO: MTLRegionMake1D -->
    <!-- TODO: MTLRegionMake2D -->
    <!-- TODO: MTLRegionMake3D -->
    <!-- TODO: MTLSizeMake -->
    
    <!-- Creating a Color to Clear an Attachment -->
    <!-- TODO: MTLClearColorMake -->
  </extern>

  <script type="root">
pub fn all_devices() -> NSArrayID {
  unsafe {
    return NSArrayID::from_ptr(MTLCopyAllDevices());
  }
}

pub fn system_default_device() -> MTLDeviceID {
  unsafe {
    return MTLDeviceID::from_ptr(MTLCreateSystemDefaultDevice());
  }
}
  </script>

  <enumeration name="MTLArgumentAccess" type="NSUInteger">
    <value name="MTLArgumentAccessReadOnly" value="0" />
    <value name="MTLArgumentAccessReadWrite" value="1" />
    <value name="MTLArgumentAccessWriteOnly" value="2" />
  </enumeration>

  <enumeration name="MTLArgumentType" type="NSUInteger">
    <value name="MTLArgumentTypeBuffer" value="0" />
    <value name="MTLArgumentTypeThreadgroupMemory" value="1" />
    <value name="MTLArgumentTypeTexture" value="2" />
    <value name="MTLArgumentTypeSampler" value="4" />
  </enumeration>

  <enumeration name="MTLAttributeFormat" type="NSUInteger">
    <value name="MTLAttributeFormatInvalid" value="0" />
    <value name="MTLAttributeFormatUChar2" value="1" />
    <value name="MTLAttributeFormatUChar3" value="2" />
    <value name="MTLAttributeFormatUChar4" value="3" />
    <value name="MTLAttributeFormatChar2" value="4" />
    <value name="MTLAttributeFormatChar3" value="5" />
    <value name="MTLAttributeFormatChar4" value="6" />
    <value name="MTLAttributeFormatUChar2Normalized" value="7" />
    <value name="MTLAttributeFormatUChar3Normalized" value="8" />
    <value name="MTLAttributeFormatUChar4Normalized" value="9" />
    <value name="MTLAttributeFormatChar2Normalized" value="10" />
    <value name="MTLAttributeFormatChar3Normalized" value="11" />
    <value name="MTLAttributeFormatChar4Normalized" value="12" />
    <value name="MTLAttributeFormatUShort2" value="13" />
    <value name="MTLAttributeFormatUShort3" value="14" />
    <value name="MTLAttributeFormatUShort4" value="15" />
    <value name="MTLAttributeFormatShort2" value="16" />
    <value name="MTLAttributeFormatShort3" value="17" />
    <value name="MTLAttributeFormatShort4" value="18" />
    <value name="MTLAttributeFormatUShort2Normalized" value="19" />
    <value name="MTLAttributeFormatUShort3Normalized" value="20" />
    <value name="MTLAttributeFormatUShort4Normalized" value="21" />
    <value name="MTLAttributeFormatShort2Normalized" value="22" />
    <value name="MTLAttributeFormatShort3Normalized" value="23" />
    <value name="MTLAttributeFormatShort4Normalized" value="24" />
    <value name="MTLAttributeFormatHalf2" value="25" />
    <value name="MTLAttributeFormatHalf3" value="26" />
    <value name="MTLAttributeFormatHalf4" value="27" />
    <value name="MTLAttributeFormatFloat" value="28" />
    <value name="MTLAttributeFormatFloat2" value="29" />
    <value name="MTLAttributeFormatFloat3" value="30" />
    <value name="MTLAttributeFormatFloat4" value="31" />
    <value name="MTLAttributeFormatInt" value="32" />
    <value name="MTLAttributeFormatInt2" value="33" />
    <value name="MTLAttributeFormatInt3" value="34" />
    <value name="MTLAttributeFormatInt4" value="35" />
    <value name="MTLAttributeFormatUInt" value="36" />
    <value name="MTLAttributeFormatUInt2" value="37" />
    <value name="MTLAttributeFormatUInt3" value="38" />
    <value name="MTLAttributeFormatUInt4" value="39" />
    <value name="MTLAttributeFormatInt1010102Normalized" value="40" />
    <value name="MTLAttributeFormatUInt1010102Normalized" value="41" />
  </enumeration>

  <enumeration name="MTLBlendFactor" type="NSUInteger">
    <value name="MTLBlendFactorZero" value="0" />
    <value name="MTLBlendFactorOne" value="1" />
    <value name="MTLBlendFactorSourceColor" value="2" />
    <value name="MTLBlendFactorOneMinusSourceColor" value="3" />
    <value name="MTLBlendFactorSourceAlpha" value="4" />
    <value name="MTLBlendFactorOneMinusSourceAlpha" value="5" />
    <value name="MTLBlendFactorDestinationColor" value="6" />
    <value name="MTLBlendFactorOneMinusDestinationColor" value="7" />
    <value name="MTLBlendFactorDestinationAlpha" value="8" />
    <value name="MTLBlendFactorOneMinusDestinationAlpha" value="9" />
    <value name="MTLBlendFactorSourceAlphaSaturated" value="10" />
    <value name="MTLBlendFactorBlendColor" value="11" />
    <value name="MTLBlendFactorOneMinusBlendColor" value="12" />
    <value name="MTLBlendFactorBlendAlpha" value="13" />
    <value name="MTLBlendFactorOneMinusBlendAlpha" value="14" />
    <value name="MTLBlendFactorSource1Color" value="15" />
    <value name="MTLBlendFactorOneMinusSource1Color" value="16" />
    <value name="MTLBlendFactorSource1Alpha" value="17" />
    <value name="MTLBlendFactorOneMinusSource1Alpha" value="18" />
  </enumeration>

  <enumeration name="MTLBlendOperation" type="NSUInteger">
    <value name="MTLBlendOperationAdd" value="0" />
    <value name="MTLBlendOperationSubtract" value="1" />
    <value name="MTLBlendOperationReverseSubtract" value="2" />
    <value name="MTLBlendOperationMin" value="3" />
    <value name="MTLBlendOperationMax" value="4" />
  </enumeration>

  <enumeration name="MTLBlitOption" type="NSUInteger">
    <value name="MTLBlitOptionNone" value="0" />
    <value name="MTLBlitOptionDepthFromDepthStencil" value="1 << 0" />
    <value name="MTLBlitOptionStencilFromDepthStencil" value="1 << 1" />
    <value name="MTLBlitOptionRowLinearPVRTC" value="1 << 2" />
  </enumeration>

  <enumeration name="MTLCPUCacheMode" type="NSUInteger">
    <value name="MTLCPUCacheModeDefaultCache" value="0" />
    <value name="MTLCPUCacheModeWriteCombined" value="1" />
  </enumeration>

  <enumeration name="MTLColorWriteMask" type="NSUInteger">
    <value name="MTLColorWriteMaskNone" value="0" />
    <value name="MTLColorWriteMaskRed" value="0x1 << 3" />
    <value name="MTLColorWriteMaskGreen" value="0x1 << 2" />
    <value name="MTLColorWriteMaskBlue" value="0x1 << 1" />
    <value name="MTLColorWriteMaskAlpha" value="0x1 << 0" />
    <value name="MTLColorWriteMaskAll" value="0xf" />
  </enumeration>

  <enumeration name="MTLCommandBufferError" type="NSUInteger">
    <value name="MTLCommandBufferErrorNone" value="0" />
    <value name="MTLCommandBufferErrorInternal" value="1" />
    <value name="MTLCommandBufferErrorTimeout" value="2" />
    <value name="MTLCommandBufferErrorPageFault" value="3" />
    <value name="MTLCommandBufferErrorBlacklisted" value="4" />
    <value name="MTLCommandBufferErrorNotPermitted" value="7" />
    <value name="MTLCommandBufferErrorOutOfMemory" value="8" />
    <value name="MTLCommandBufferErrorInvalidResource" value="9" />
    <value name="MTLCommandBufferErrorMemoryless" value="10" />
  </enumeration>

  <enumeration name="MTLCommandBufferStatus" type="NSUInteger">
    <value name="MTLCommandBufferStatusNotEnqueued" value="0" />
    <value name="MTLCommandBufferStatusEnqueued" value="1" />
    <value name="MTLCommandBufferStatusCommitted" value="2" />
    <value name="MTLCommandBufferStatusScheduled" value="3" />
    <value name="MTLCommandBufferStatusCompleted" value="4" />
    <value name="MTLCommandBufferStatusError" value="5" />
  </enumeration>

  <enumeration name="MTLCompareFunction" type="NSUInteger">
    <value name="MTLCompareFunctionNever" value="0" />
    <value name="MTLCompareFunctionLess" value="1" />
    <value name="MTLCompareFunctionEqual" value="2" />
    <value name="MTLCompareFunctionLessEqual" value="3" />
    <value name="MTLCompareFunctionGreater" value="4" />
    <value name="MTLCompareFunctionNotEqual" value="5" />
    <value name="MTLCompareFunctionGreaterEqual" value="6" />
    <value name="MTLCompareFunctionAlways" value="7" />
  </enumeration>

  <enumeration name="MTLCullMode" type="NSUInteger">
    <value name="MTLCullModeNone" value="0" />
    <value name="MTLCullModeFront" value="1" />
    <value name="MTLCullModeBack" value="2" />
  </enumeration>

  <enumeration name="MTLDepthClipMode" type="NSUInteger">
    <value name="MTLDepthClipModeClip" value="0" />
    <value name="MTLDepthClipModeClamp" value="1" />
  </enumeration>

  <enumeration name="MTLFeatureSet" type="NSUInteger">
    <value name="MTLFeatureSet_iOS_GPUFamily1_v1" value="0" />
    <value name="MTLFeatureSet_iOS_GPUFamily1_v2" value="2" />
    <value name="MTLFeatureSet_iOS_GPUFamily1_v3" value="5" />
    <value name="MTLFeatureSet_iOS_GPUFamily2_v1" value="1" />
    <value name="MTLFeatureSet_iOS_GPUFamily2_v2" value="3" />
    <value name="MTLFeatureSet_iOS_GPUFamily2_v3" value="6" />
    <value name="MTLFeatureSet_iOS_GPUFamily3_v1" value="4" />
    <value name="MTLFeatureSet_iOS_GPUFamily3_v2" value="7" />
    <value name="MTLFeatureSet_OSX_GPUFamily1_v1" value="10000" />
    <value name="MTLFeatureSet_OSX_GPUFamily1_v2" value="10001" />
    <value name="MTLFeatureSet_OSX_ReadWriteTextureTier2" value="10002" />
    <value name="MTLFeatureSet_tvOS_GPUFamily1_v1" value="30000" />
    <value name="MTLFeatureSet_tvOS_GPUFamily1_v2" value="30001" />
  </enumeration>

  <enumeration name="MTLFunctionType" type="NSUInteger">
    <value name="MTLFunctionTypeVertex" value="1" />
    <value name="MTLFunctionTypeFragment" value="2" />
    <value name="MTLFunctionTypeKernel" value="3" />
  </enumeration>

  <enumeration name="MTLIndexType" type="NSUInteger">
    <value name="MTLIndexTypeUInt16" value="0" />
    <value name="MTLIndexTypeUInt32" value="1" />
  </enumeration>

  <enumeration name="MTLLanguageVersion" type="NSUInteger">
    <value name="MTLLanguageVersion1_0" value="(1 << 16)" />
    <value name="MTLLanguageVersion1_1" value="(1 << 16) + 1" />
    <value name="MTLLanguageVersion1_2" value="(1 << 16) + 2" />
  </enumeration>

  <enumeration name="MTLLibraryError" type="NSUInteger">
    <value name="MTLLibraryErrorUnsupported" value="1" />
    <value name="MTLLibraryErrorInternal" value="2" />
    <value name="MTLLibraryErrorCompileFailure" value="3" />
    <value name="MTLLibraryErrorCompileWarning" value="4" />
    <value name="MTLLibraryErrorFunctionNotFound" value="5" />
    <value name="MTLLibraryErrorFileNotFound" value="6" />
  </enumeration>

  <enumeration name="MTLLoadAction" type="NSUInteger">
    <value name="MTLLoadActionDontCare" value="0" />
    <value name="MTLLoadActionLoad" value="1" />
    <value name="MTLLoadActionClear" value="2" />
  </enumeration>

  <enumeration name="MTLMultisampleDepthResolveFilter" type="NSUInteger">
    <value name="MTLMultisampleDepthResolveFilterSample0" value="0" />
    <value name="MTLMultisampleDepthResolveFilterMin" value="1" />
    <value name="MTLMultisampleDepthResolveFilterMax" value="2" />
  </enumeration>

  <enumeration name="MTLPatchType" type="NSUInteger">
    <value name="MTLPatchTypeNone" value="0" />
    <value name="MTLPatchTypeTriangle" value="1" />
    <value name="MTLPatchTypeQuad" value="2" />
  </enumeration>

  <enumeration name="MTLPipelineOption" type="NSUInteger">
    <value name="MTLPipelineOptionNone" value="0" />
    <value name="MTLPipelineOptionArgumentInfo" value="1 << 0" />
    <value name="MTLPipelineOptionBufferTypeInfo" value="1 << 1" />
  </enumeration>

  <enumeration name="MTLPixelFormat" type="NSUInteger">
    <value name="MTLPixelFormatInvalid" value="0" />
    <value name="MTLPixelFormatA8Unorm" value="1" />
    <value name="MTLPixelFormatR8Unorm" value="10" />
    <value name="MTLPixelFormatR8Unorm_sRGB" value="11" />
    <value name="MTLPixelFormatR8Snorm" value="12" />
    <value name="MTLPixelFormatR8Uint" value="13" />
    <value name="MTLPixelFormatR8Sint" value="14" />
    <value name="MTLPixelFormatR16Unorm" value="20" />
    <value name="MTLPixelFormatR16Snorm" value="22" />
    <value name="MTLPixelFormatR16Uint" value="23" />
    <value name="MTLPixelFormatR16Sint" value="24" />
    <value name="MTLPixelFormatR16Float" value="25" />
    <value name="MTLPixelFormatRG8Unorm" value="30" />
    <value name="MTLPixelFormatRG8Unorm_sRGB" value="31" />
    <value name="MTLPixelFormatRG8Snorm" value="32" />
    <value name="MTLPixelFormatRG8Uint" value="33" />
    <value name="MTLPixelFormatRG8Sint" value="34" />
    <value name="MTLPixelFormatB5G6R5Unorm" value="40" />
    <value name="MTLPixelFormatA1BGR5Unorm" value="41" />
    <value name="MTLPixelFormatABGR4Unorm" value="42" />
    <value name="MTLPixelFormatBGR5A1Unorm" value="43" />
    <value name="MTLPixelFormatR32Uint" value="53" />
    <value name="MTLPixelFormatR32Sint" value="54" />
    <value name="MTLPixelFormatR32Float" value="55" />
    <value name="MTLPixelFormatRG16Unorm" value="60" />
    <value name="MTLPixelFormatRG16Snorm" value="62" />
    <value name="MTLPixelFormatRG16Uint" value="63" />
    <value name="MTLPixelFormatRG16Sint" value="64" />
    <value name="MTLPixelFormatRG16Float" value="65" />
    <value name="MTLPixelFormatRGBA8Unorm" value="70" />
    <value name="MTLPixelFormatRGBA8Unorm_sRGB" value="71" />
    <value name="MTLPixelFormatRGBA8Snorm" value="72" />
    <value name="MTLPixelFormatRGBA8Uint" value="73" />
    <value name="MTLPixelFormatRGBA8Sint" value="74" />
    <value name="MTLPixelFormatBGRA8Unorm" value="80" />
    <value name="MTLPixelFormatBGRA8Unorm_sRGB" value="81" />
    <value name="MTLPixelFormatRGB10A2Unorm" value="90" />
    <value name="MTLPixelFormatRGB10A2Uint" value="91" />
    <value name="MTLPixelFormatRG11B10Float" value="92" />
    <value name="MTLPixelFormatRGB9E5Float" value="93" />
    <value name="MTLPixelFormatBGR10_XR" value="554" />
    <value name="MTLPixelFormatBGR10_XR_sRGB" value="555" />
    <value name="MTLPixelFormatRG32Uint" value="103" />
    <value name="MTLPixelFormatRG32Sint" value="104" />
    <value name="MTLPixelFormatRG32Float" value="105" />
    <value name="MTLPixelFormatRGBA16Unorm" value="110" />
    <value name="MTLPixelFormatRGBA16Snorm" value="112" />
    <value name="MTLPixelFormatRGBA16Uint" value="113" />
    <value name="MTLPixelFormatRGBA16Sint" value="114" />
    <value name="MTLPixelFormatRGBA16Float" value="115" />
    <value name="MTLPixelFormatBGRA10_XR" value="552" />
    <value name="MTLPixelFormatBGRA10_XR_sRGB" value="553" />
    <value name="MTLPixelFormatRGBA32Uint" value="123" />
    <value name="MTLPixelFormatRGBA32Sint" value="124" />
    <value name="MTLPixelFormatRGBA32Float" value="125" />
    <value name="MTLPixelFormatBC1_RGBA" value="130" />
    <value name="MTLPixelFormatBC1_RGBA_sRGB" value="131" />
    <value name="MTLPixelFormatBC2_RGBA" value="132" />
    <value name="MTLPixelFormatBC2_RGBA_sRGB" value="133" />
    <value name="MTLPixelFormatBC3_RGBA" value="134" />
    <value name="MTLPixelFormatBC3_RGBA_sRGB" value="135" />
    <value name="MTLPixelFormatBC4_RUnorm" value="140" />
    <value name="MTLPixelFormatBC4_RSnorm" value="141" />
    <value name="MTLPixelFormatBC5_RGUnorm" value="142" />
    <value name="MTLPixelFormatBC5_RGSnorm" value="143" />
    <value name="MTLPixelFormatBC6H_RGBFloat" value="150" />
    <value name="MTLPixelFormatBC6H_RGBUfloat" value="151" />
    <value name="MTLPixelFormatBC7_RGBAUnorm" value="152" />
    <value name="MTLPixelFormatBC7_RGBAUnorm_sRGB" value="153" />
    <value name="MTLPixelFormatPVRTC_RGB_2BPP" value="160" />
    <value name="MTLPixelFormatPVRTC_RGB_2BPP_sRGB" value="161" />
    <value name="MTLPixelFormatPVRTC_RGB_4BPP" value="162" />
    <value name="MTLPixelFormatPVRTC_RGB_4BPP_sRGB" value="163" />
    <value name="MTLPixelFormatPVRTC_RGBA_2BPP" value="164" />
    <value name="MTLPixelFormatPVRTC_RGBA_2BPP_sRGB" value="165" />
    <value name="MTLPixelFormatPVRTC_RGBA_4BPP" value="166" />
    <value name="MTLPixelFormatPVRTC_RGBA_4BPP_sRGB" value="167" />
    <value name="MTLPixelFormatEAC_R11Unorm" value="170" />
    <value name="MTLPixelFormatEAC_R11Snorm" value="172" />
    <value name="MTLPixelFormatEAC_RG11Unorm" value="174" />
    <value name="MTLPixelFormatEAC_RG11Snorm" value="176" />
    <value name="MTLPixelFormatEAC_RGBA8" value="178" />
    <value name="MTLPixelFormatEAC_RGBA8_sRGB" value="179" />
    <value name="MTLPixelFormatETC2_RGB8" value="180" />
    <value name="MTLPixelFormatETC2_RGB8_sRGB" value="181" />
    <value name="MTLPixelFormatETC2_RGB8A1" value="182" />
    <value name="MTLPixelFormatETC2_RGB8A1_sRGB" value="183" />
    <value name="MTLPixelFormatASTC_4x4_sRGB" value="186" />
    <value name="MTLPixelFormatASTC_5x4_sRGB" value="187" />
    <value name="MTLPixelFormatASTC_5x5_sRGB" value="188" />
    <value name="MTLPixelFormatASTC_6x5_sRGB" value="189" />
    <value name="MTLPixelFormatASTC_6x6_sRGB" value="190" />
    <value name="MTLPixelFormatASTC_8x5_sRGB" value="192" />
    <value name="MTLPixelFormatASTC_8x6_sRGB" value="193" />
    <value name="MTLPixelFormatASTC_8x8_sRGB" value="194" />
    <value name="MTLPixelFormatASTC_10x5_sRGB" value="195" />
    <value name="MTLPixelFormatASTC_10x6_sRGB" value="196" />
    <value name="MTLPixelFormatASTC_10x8_sRGB" value="197" />
    <value name="MTLPixelFormatASTC_10x10_sRGB" value="198" />
    <value name="MTLPixelFormatASTC_12x10_sRGB" value="199" />
    <value name="MTLPixelFormatASTC_12x12_sRGB" value="200" />
    <value name="MTLPixelFormatASTC_4x4_LDR" value="204" />
    <value name="MTLPixelFormatASTC_5x4_LDR" value="205" />
    <value name="MTLPixelFormatASTC_5x5_LDR" value="206" />
    <value name="MTLPixelFormatASTC_6x5_LDR" value="207" />
    <value name="MTLPixelFormatASTC_6x6_LDR" value="208" />
    <value name="MTLPixelFormatASTC_8x5_LDR" value="210" />
    <value name="MTLPixelFormatASTC_8x6_LDR" value="211" />
    <value name="MTLPixelFormatASTC_8x8_LDR" value="212" />
    <value name="MTLPixelFormatASTC_10x5_LDR" value="213" />
    <value name="MTLPixelFormatASTC_10x6_LDR" value="214" />
    <value name="MTLPixelFormatASTC_10x8_LDR" value="215" />
    <value name="MTLPixelFormatASTC_10x10_LDR" value="216" />
    <value name="MTLPixelFormatASTC_12x10_LDR" value="217" />
    <value name="MTLPixelFormatASTC_12x12_LDR" value="218" />
    <value name="MTLPixelFormatGBGR422" value="240" />
    <value name="MTLPixelFormatBGRG422" value="241" />
    <value name="MTLPixelFormatDepth16Unorm" value="250" />
    <value name="MTLPixelFormatDepth32Float" value="252" />
    <value name="MTLPixelFormatStencil8" value="253" />
    <value name="MTLPixelFormatDepth24Unorm_Stencil8" value="255" />
    <value name="MTLPixelFormatDepth32Float_Stencil8" value="260" />
    <value name="MTLPixelFormatX32_Stencil8" value="261" />
    <value name="MTLPixelFormatX24_Stencil8" value="262" />
  </enumeration>

  <enumeration name="MTLPrimitiveTopologyClass" type="NSUInteger">
    <value name="MTLPrimitiveTopologyClassUnspecified" value="0" />
    <value name="MTLPrimitiveTopologyClassPoint" value="1" />
    <value name="MTLPrimitiveTopologyClassLine" value="2" />
    <value name="MTLPrimitiveTopologyClassTriangle" value="3" />
  </enumeration>

  <enumeration name="MTLPrimitiveType" type="NSUInteger">
    <value name="MTLPrimitiveTypePoint" value="0" />
    <value name="MTLPrimitiveTypeLine" value="1" />
    <value name="MTLPrimitiveTypeLineStrip" value="2" />
    <value name="MTLPrimitiveTypeTriangle" value="3" />
    <value name="MTLPrimitiveTypeTriangleStrip" value="4" />
  </enumeration>

  <enumeration name="MTLPurgeableState" type="NSUInteger">
    <value name="MTLPurgeableStateKeepCurrent" value="1" />
    <value name="MTLPurgeableStateNonVolatile" value="2" />
    <value name="MTLPurgeableStateVolatile" value="3" />
    <value name="MTLPurgeableStateEmpty" value="4" />
  </enumeration>

  <enumeration name="MTLRenderPipelineError" type="NSUInteger">
    <value name="MTLRenderPipelineErrorInternal" value="1" />
    <value name="MTLRenderPipelineErrorUnsupported" value="2" />
    <value name="MTLRenderPipelineErrorInvalidInput" value="3" />
  </enumeration>

  <enumeration name="MTLRenderStages" type="NSUInteger">
    <value name="MTLRenderStageVertex" value="(1 << 0)" />
    <value name="MTLRenderStageFragment" value="(1 << 1)" />
  </enumeration>

  <enumeration name="MTLResourceOptions" type="NSUInteger">
    <value name="MTLResourceCPUCacheModeDefaultCache" value="MTLCPUCacheModeDefaultCache.bits << 0" />
    <value name="MTLResourceCPUCacheModeWriteCombined" value="MTLCPUCacheModeWriteCombined.bits << 0" />
    <value name="MTLResourceStorageModeShared" value="MTLStorageModeShared.bits << 4" />
    <value name="MTLResourceStorageModeManaged" value="MTLStorageModeManaged.bits << 4" />
    <value name="MTLResourceStorageModePrivate" value="MTLStorageModePrivate.bits << 4" />
    <value name="MTLResourceStorageModeMemoryless" value="MTLStorageModeMemoryless.bits << 4" />
    <value name="MTLResourceHazardTrackingModeUntracked" value="0x1 << 8" />
  </enumeration>

  <enumeration name="MTLSamplerAddressMode" type="NSUInteger">
    <value name="MTLSamplerAddressModeClampToEdge" value="0" />
    <value name="MTLSamplerAddressModeMirrorClampToEdge" value="1" />
    <value name="MTLSamplerAddressModeRepeat" value="2" />
    <value name="MTLSamplerAddressModeMirrorRepeat" value="3" />
    <value name="MTLSamplerAddressModeClampToZero" value="4" />
    <value name="MTLSamplerAddressModeClampToBorderColor" value="5" />
  </enumeration>

  <enumeration name="MTLSamplerBorderColor" type="NSUInteger">
    <value name="MTLSamplerBorderColorTransparentBlack" value="0" />
    <value name="MTLSamplerBorderColorOpaqueBlack" value="1" />
    <value name="MTLSamplerBorderColorOpaqueWhite" value="2" />
  </enumeration>

  <enumeration name="MTLSamplerMinMagFilter" type="NSUInteger">
    <value name="MTLSamplerMinMagFilterNearest" value="0" />
    <value name="MTLSamplerMinMagFilterLinear" value="1" />
  </enumeration>

  <enumeration name="MTLSamplerMipFilter" type="NSUInteger">
    <value name="MTLSamplerMipFilterNotMipmapped" value="0" />
    <value name="MTLSamplerMipFilterNearest" value="1" />
    <value name="MTLSamplerMipFilterLinear" value="2" />
  </enumeration>

  <enumeration name="MTLStencilOperation" type="NSUInteger">
    <value name="MTLStencilOperationKeep" value="0" />
    <value name="MTLStencilOperationZero" value="1" />
    <value name="MTLStencilOperationReplace" value="2" />
    <value name="MTLStencilOperationIncrementClamp" value="3" />
    <value name="MTLStencilOperationDecrementClamp" value="4" />
    <value name="MTLStencilOperationInvert" value="5" />
    <value name="MTLStencilOperationIncrementWrap" value="6" />
    <value name="MTLStencilOperationDecrementWrap" value="7" />
  </enumeration>

  <enumeration name="MTLStepFunction" type="NSUInteger">
    <value name="MTLStepFunctionConstant" value="0" />
    <value name="MTLStepFunctionPerVertex" value="1" />
    <value name="MTLStepFunctionPerInstance" value="2" />
    <value name="MTLStepFunctionPerPatch" value="3" />
    <value name="MTLStepFunctionPerPatchControlPoint" value="4" />
    <value name="MTLStepFunctionThreadPositionInGridX" value="5" />
    <value name="MTLStepFunctionThreadPositionInGridY" value="6" />
    <value name="MTLStepFunctionThreadPositionInGridXIndexed" value="7" />
    <value name="MTLStepFunctionThreadPositionInGridYIndexed" value="8" />
  </enumeration>

  <enumeration name="MTLStorageMode" type="NSUInteger">
    <value name="MTLStorageModeShared" value="0" />
    <value name="MTLStorageModeManaged" value="1" />
    <value name="MTLStorageModePrivate" value="2" />
    <value name="MTLStorageModeMemoryless" value="3" />
  </enumeration>

  <enumeration name="MTLStoreAction" type="NSUInteger">
    <value name="MTLStoreActionDontCare" value="0" />
    <value name="MTLStoreActionStore" value="1" />
    <value name="MTLStoreActionMultisampleResolve" value="2" />
    <value name="MTLStoreActionStoreAndMultisampleResolve" value="3" />
    <value name="MTLStoreActionUnknown" value="4" />
  </enumeration>

  <enumeration name="MTLTessellationControlPointIndexType" type="NSUInteger">
    <value name="MTLTessellationControlPointIndexTypeNone" value="0" />
    <value name="MTLTessellationControlPointIndexTypeUInt16" value="1" />
    <value name="MTLTessellationControlPointIndexTypeUInt32" value="2" />
  </enumeration>

  <enumeration name="MTLTessellationFactorFormat" type="NSUInteger">
    <value name="MTLTessellationFactorFormatHalf" value="0" />
  </enumeration>

  <enumeration name="MTLTessellationFactorStepFunction" type="NSUInteger">
    <value name="MTLTessellationFactorStepFunctionConstant" value="0" />
    <value name="MTLTessellationFactorStepFunctionPerPatch" value="1" />
    <value name="MTLTessellationFactorStepFunctionPerInstance" value="2" />
    <value name="MTLTessellationFactorStepFunctionPerPatchAndPerInstance" value="3" />
  </enumeration>

  <enumeration name="MTLTessellationPartitionMode" type="NSUInteger">
    <value name="MTLTessellationPartitionModePow2" value="0" />
    <value name="MTLTessellationPartitionModeInteger" value="1" />
    <value name="MTLTessellationPartitionModeFractionalOdd" value="2" />
    <value name="MTLTessellationPartitionModeFractionalEven" value="3" />
  </enumeration>

  <enumeration name="MTLTextureType" type="NSUInteger">
    <value name="MTLTextureType1D" value="0" />
    <value name="MTLTextureType1DArray" value="1" />
    <value name="MTLTextureType2D" value="2" />
    <value name="MTLTextureType2DArray" value="3" />
    <value name="MTLTextureType2DMultisample" value="4" />
    <value name="MTLTextureTypeCube" value="5" />
    <value name="MTLTextureTypeCubeArray" value="6" />
    <value name="MTLTextureType3D" value="7" />
  </enumeration>

  <enumeration name="MTLTextureUsage" type="NSUInteger">
    <value name="MTLTextureUsageUnknown" value="0x0000" />
    <value name="MTLTextureUsageShaderRead" value="0x0001" />
    <value name="MTLTextureUsageShaderWrite" value="0x0002" />
    <value name="MTLTextureUsageRenderTarget" value="0x0004" />
    <value name="MTLTextureUsagePixelFormatView" value="0x0010" />
  </enumeration>

  <enumeration name="MTLTriangleFillMode" type="NSUInteger">
    <value name="MTLTriangleFillModeFill" value="0" />
    <value name="MTLTriangleFillModeLines" value="1" />
  </enumeration>

  <enumeration name="MTLVertexFormat" type="NSUInteger">
    <value name="MTLVertexFormatInvalid" value="0" />
    <value name="MTLVertexFormatUChar2" value="1" />
    <value name="MTLVertexFormatUChar3" value="2" />
    <value name="MTLVertexFormatUChar4" value="3" />
    <value name="MTLVertexFormatChar2" value="4" />
    <value name="MTLVertexFormatChar3" value="5" />
    <value name="MTLVertexFormatChar4" value="6" />
    <value name="MTLVertexFormatUChar2Normalized" value="7" />
    <value name="MTLVertexFormatUChar3Normalized" value="8" />
    <value name="MTLVertexFormatUChar4Normalized" value="9" />
    <value name="MTLVertexFormatChar2Normalized" value="10" />
    <value name="MTLVertexFormatChar3Normalized" value="11" />
    <value name="MTLVertexFormatChar4Normalized" value="12" />
    <value name="MTLVertexFormatUShort2" value="13" />
    <value name="MTLVertexFormatUShort3" value="14" />
    <value name="MTLVertexFormatUShort4" value="15" />
    <value name="MTLVertexFormatShort2" value="16" />
    <value name="MTLVertexFormatShort3" value="17" />
    <value name="MTLVertexFormatShort4" value="18" />
    <value name="MTLVertexFormatUShort2Normalized" value="19" />
    <value name="MTLVertexFormatUShort3Normalized" value="20" />
    <value name="MTLVertexFormatUShort4Normalized" value="21" />
    <value name="MTLVertexFormatShort2Normalized" value="22" />
    <value name="MTLVertexFormatShort3Normalized" value="23" />
    <value name="MTLVertexFormatShort4Normalized" value="24" />
    <value name="MTLVertexFormatHalf2" value="25" />
    <value name="MTLVertexFormatHalf3" value="26" />
    <value name="MTLVertexFormatHalf4" value="27" />
    <value name="MTLVertexFormatFloat" value="28" />
    <value name="MTLVertexFormatFloat2" value="29" />
    <value name="MTLVertexFormatFloat3" value="30" />
    <value name="MTLVertexFormatFloat4" value="31" />
    <value name="MTLVertexFormatInt" value="32" />
    <value name="MTLVertexFormatInt2" value="33" />
    <value name="MTLVertexFormatInt3" value="34" />
    <value name="MTLVertexFormatInt4" value="35" />
    <value name="MTLVertexFormatUInt" value="36" />
    <value name="MTLVertexFormatUInt2" value="37" />
    <value name="MTLVertexFormatUInt3" value="38" />
    <value name="MTLVertexFormatUInt4" value="39" />
    <value name="MTLVertexFormatInt1010102Normalized" value="40" />
    <value name="MTLVertexFormatUInt1010102Normalized" value="41" />
  </enumeration>

  <enumeration name="MTLVertexStepFunction" type="NSUInteger">
    <value name="MTLVertexStepFunctionConstant" value="0" />
    <value name="MTLVertexStepFunctionPerVertex" value="1" />
    <value name="MTLVertexStepFunctionPerInstance" value="2" />
    <value name="MTLVertexStepFunctionPerPatch" value="3" />
    <value name="MTLVertexStepFunctionPerPatchControlPoint" value="4" />
  </enumeration>

  <enumeration name="MTLVisibilityResultMode" type="NSUInteger">
    <value name="MTLVisibilityResultModeDisabled" value="0" />
    <value name="MTLVisibilityResultModeBoolean" value="1" />
    <value name="MTLVisibilityResultModeCounting" value="2" />
  </enumeration>

  <enumeration name="MTLWinding" type="NSUInteger">
    <value name="MTLWindingClockwise" value="0" />
    <value name="MTLWindingCounterClockwise" value="1" />
  </enumeration>

  <!-- Structures -->

  <structure name="MTLClearColor">
    <field name="red" type="f64" />
    <field name="green" type="f64" />
    <field name="blue" type="f64" />
    <field name="alpha" type="f64" />
  </structure>

  <structure name="MTLDispatchThreadgroupsIndirectArguments">
    <field name="threadgroupsPerGrid" type="[u32; 3]" />
  </structure>

  <structure name="MTLDrawIndexedPrimitivesIndirectArguments">
    <field name="indexCount" type="u32" />
    <field name="instanceCount" type="u32" />
    <field name="indexStart" type="u32" />
    <field name="baseVertex" type="i32" />
    <field name="baseInstance" type="u32" />
  </structure>

  <structure name="MTLDrawPatchIndirectArguments">
    <field name="patchCount" type="u32" />
    <field name="instanceCount" type="u32" />
    <field name="patchStart" type="u32" />
    <field name="baseInstance" type="u32" />
  </structure>

  <structure name="MTLDrawPrimitivesIndirectArguments">
    <field name="vertexCount" type="u32" />
    <field name="instanceCount" type="u32" />
    <field name="vertexStart" type="u32" />
    <field name="baseInstance" type="u32" />
  </structure>

  <structure name="MTLOrigin">
    <field name="x" type="NSUInteger" />
    <field name="y" type="NSUInteger" />
    <field name="z" type="NSUInteger" />
  </structure>

  <structure name="MTLQuadTessellationFactorsHalf">
    <field name="edgeTessellationFactor" type="[u16; 4]" /> <!-- NOTE: Actually f16 -->
    <field name="insideTessellationFactor" type="[u16; 2]" />
  </structure>

  <structure name="MTLRegion">
    <field name="origin" type="MTLOrigin" />
    <field name="size" type="MTLSize" />
  </structure>

  <structure name="MTLScissorRect">
    <field name="x" type="NSUInteger" />
    <field name="y" type="NSUInteger" />
    <field name="width" type="NSUInteger" />
    <field name="height" type="NSUInteger" />
  </structure>

  <structure name="MTLSize">
    <field name="width" type="NSUInteger" />
    <field name="height" type="NSUInteger" />
    <field name="depth" type="NSUInteger" />
  </structure>

  <structure name="MTLSizeAndAlign">
    <field name="size" type="NSUInteger" />
    <field name="align" type="NSUInteger" />
  </structure>

  <structure name="MTLTriangleTessellationFactorsHalf">
    <field name="edgeTessellationFactor" type="[u16; 3]" /> <!-- NOTE: Actually f16 -->
    <field name="insideTessellationFactor" type="u16" />
  </structure>

  <structure name="MTLViewport">
    <field name="originX" type="f64" />
    <field name="originY" type="f64" />
    <field name="width" type="f64" />
    <field name="height" type="f64" />
    <field name="znear" type="f64" />
    <field name="zfar" type="f64" />
  </structure>

  <!-- Classes -->
  <class name="MTLArgument" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLArrayType" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLAttribute" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLAttributeDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLAttributeDescriptorArray" inherits="NSObject">
    <!-- Instance Methods -->
    <method selector="objectAtIndex:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLAttributeDescriptor" />
    </method>

    <method selector="objectAtIndexedSubscript:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLAttributeDescriptor" />
    </method>
  </class>

  <class name="MTLBufferLayoutDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLBufferLayoutDescriptorArray" inherits="NSObject">
    <!-- Instance Methods -->
    <method selector="objectAtIndex:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLBufferLayoutDescriptor" />
    </method>

    <method selector="objectAtIndexedSubscript:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLBufferLayoutDescriptor" />
    </method>
  </class>

  <class name="MTLCompileOptions" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLComputePipelineDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLComputePipelineReflection" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLDepthStencilDescriptor" inherits="NSObject">
    <initializer selector="init" />

    <!-- Specifying Depth Operations -->
    <property name="depthCompareFunction" type="MTLCompareFunction" />
    <property name="depthWriteEnabled" getter="isDepthWriteEnabled" type="bool" />

    <!-- Specifying Stencil Descriptors for Primitives -->
    <property name="backFaceStencil" protocol="MTLStencilDescriptor" />
    <property name="frontFaceStencil" protocol="MTLStencilDescriptor" />

    <!-- Identifying Properties -->
    <property name="label" protocol="NSString" />

  </class>

  <class name="MTLFunctionConstant" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLFunctionConstantValues" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLHeapDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLRenderPassAttachmentDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLRenderPassColorAttachmentDescriptor" inherits="MTLRenderPassAttachmentDescriptor, NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLRenderPassColorAttachmentDescriptorArray" inherits="NSObject">
    <!-- Instance Methods -->
    <method selector="objectAtIndex:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLRenderPassColorAttachmentDescriptor" />
    </method>

    <method selector="objectAtIndexedSubscript:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLRenderPassColorAttachmentDescriptor" />
    </method>
  </class>

  <class name="MTLRenderPassDepthAttachmentDescriptor" inherits="MTLRenderPassAttachmentDescriptor, NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLRenderPassDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLRenderPassStencilAttachmentDescriptor" inherits="MTLRenderPassAttachmentDescriptor, NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLRenderPipelineColorAttachmentDescriptor" inherits="NSObject">
    <!-- Specifying Render Pipeline State -->
    <property name="pixelFormat" type="MTLPixelFormat" />
    <property name="writeMask" type="MTLColorWriteMask" />

    <!-- Controlling the Blend Operation -->
    <property name="blendingEnabled" getter="isBlendingEnabled" type="bool" />
    <property name="alphaBlendOperation" type="MTLBlendOperation" />
    <property name="rgbBlendOperation" type="MTLBlendOperation" />

    <!-- Specifying Blend Factors -->
    <property name="destinationAlphaBlendFactor" type="MTLBlendFactor" />
    <property name="destinationRGBBlendFactor" type="MTLBlendFactor" />
    <property name="sourceAlphaBlendFactor" type="MTLBlendFactor" />
    <property name="sourceRGBBlendFactor" type="MTLBlendFactor" />
  </class>

  <class name="MTLRenderPipelineColorAttachmentDescriptorArray" inherits="NSObject">
    <!-- Instance Methods -->
    <method selector="objectAtIndex:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLRenderPipelineColorAttachmentDescriptor" />
    </method>

    <method selector="objectAtIndexedSubscript:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLRenderPipelineColorAttachmentDescriptor" />
    </method>
  </class>

  <class name="MTLRenderPipelineDescriptor" inherits="NSObject">
    <initializer selector="init" />

    <!-- Specifying Shader Functions and Associated Data -->
    <property name="fragmentFunction" protocol="MTLFunction" />
    <property name="vertexFunction" protocol="MTLFunction" />
    <property name="vertexDescriptor" protocol="MTLVertexDescriptor" />

    <!-- Specifying Rendering Pipeline State -->
    <method selector="reset" />
    <property name="colorAttachments" protocol="MTLRenderPipelineColorAttachmentDescriptorArray" />
    <property name="depthAttachmentPixelFormat" type="MTLPixelFormat" />
    <property name="stencilAttachmentPixelFormat" type="MTLPixelFormat" />

    <!-- Specifying Rasterization and Visibility State -->
    <!-- TODO: All missing -->

    <!-- Specifying Tessellation State -->
    <!-- TODO: All missing -->

    <!-- Identifying Properties -->
    <property name="label" protocol="NSString" />
  </class>

  <class name="MTLRenderPipelineReflection" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLSamplerDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLStageInputOutputDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLStencilDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLStructMember" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLStructType" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLTextureDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLVertexAttribute" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLVertexAttributeDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLVertexAttributeDescriptorArray" inherits="NSObject">
    <!-- Instance Methods -->
    <method selector="objectAtIndex:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLVertexAttributeDescriptor" />
    </method>

    <method selector="objectAtIndexedSubscript:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLVertexAttributeDescriptor" />
    </method>
  </class>

  <class name="MTLVertexBufferLayoutDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <class name="MTLVertexBufferLayoutDescriptorArray" inherits="NSObject">
    <!-- Instance Methods -->
    <method selector="objectAtIndex:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLVertexBufferLayoutDescriptor" />
    </method>

    <method selector="objectAtIndexedSubscript:">
      <argument name="index" type="NSUInteger" />
      <return protocol="MTLVertexBufferLayoutDescriptor" />
    </method>
  </class>

  <class name="MTLVertexDescriptor" inherits="NSObject">
    <!-- TODO: All missing -->
  </class>

  <!-- Protocols -->
  <protocol name="MTLBlitCommandEncoder" inherits="MTLCommandEncoder, NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLBuffer" inherits="MTLResource, NSObject">
    <!-- Creating a Texture That Shares Buffer Data -->
    <!-- TODO: newTextureWithDescriptor:offset:bytesPerRow: -->

    <!-- Locating the Buffer’s Storage -->
    <method selector="contents">
      <return type="*mut std::os::raw::c_void" />
    </method>

    <!-- Invalidating the Buffer’s Storage -->
    <!-- TODO: Fix NSRange
    <method selector="didModifyRange:">
      <argument name="range" type="NSRange" />
    </method>
    -->

    <!-- Properties -->
    <property name="length" type="NSUInteger" read-only />

    <!-- Instance Methods -->
    <!-- TODO: Fix NSRange
    <method selector="addDebugMarker:range:">
      <argument name="marker" protocol="NSString" />
      <argument name="range" type="NSRange" />
    </method>
    -->
    <method selector="removeAllDebugMarkers" />
  </protocol>

  <protocol name="MTLCommandBuffer" inherits="NSObject">
    <!-- Creating Command Encoders -->
    <method selector="renderCommandEncoderWithDescriptor:">
      <argument name="renderPassDescriptor" protocol="MTLRenderPassDescriptor" />
      <return protocol="MTLRenderCommandEncoder" />
    </method>
    <method selector="computeCommandEncoder">
      <return protocol="MTLComputeCommandEncoder" />
    </method>
    <method selector="blitCommandEncoder">
      <return protocol="MTLBlitCommandEncoder" />
    </method>
    <method selector="parallelRenderCommandEncoderWithDescriptor:">
      <argument name="renderPassDescriptor" protocol="MTLRenderPassDescriptor" />
      <return protocol="MTLParallelRenderCommandEncoder" />
    </method>

    <!-- Scheduling and Executing Commands -->
    <method selector="enqueue" />
    <method selector="commit" />
    <!-- TODO: addScheduledHandler: -->
    <!-- TODO: addCompletedHandler: -->
    <method selector="presentDrawable:">
      <argument name="drawable" protocol="MTLDrawable" />
    </method>
    <method selector="presentDrawable:atTime:">
      <argument name="drawable" protocol="MTLDrawable" />
      <argument name="time" type="CFTimeInterval" />
    </method>
    <method selector="waitUntilScheduled" />
    <method selector="waitUntilCompleted" />

    <!-- Monitoring Command Buffer Execution -->
    <!-- TODO: status -->
    <!-- TODO: error -->

    <!-- Determining Whether to Keep Strong References to Associated Resource Objects -->
    <property name="retainedReferences" type="bool" read-only />

    <!-- Identifying the Command Buffer -->
    <property name="device" protocol="MTLDevice" read-only />
    <property name="commandQueue" protocol="MTLCommandQueue" read-only />
    <property name="label" protocol="NSString" />
  </protocol>

  <protocol name="MTLCommandEncoder" inherits="NSObject">
    <!-- Ending Encoded Commands -->
    <method selector="endEncoding" />

    <!-- Debugging from Xcode with Strings -->
    <method selector="insertDebugSignpost">
      <argument name="string" protocol="NSString" />
    </method>

    <method selector="pushDebugGroup">
      <argument name="string" protocol="NSString" />
    </method>

    <method selector="popDebugGroup" />

    <!-- Identifying Properties -->
    <property name="device" protocol="MTLDevice" read-only />
    <property name="label" protocol="NSString" />
  </protocol>
  <!-- TODO: MTLCommandEncoder -->

  <protocol name="MTLCommandQueue" inherits="NSObject">
    <!-- Creating Command Buffers -->
    <method selector="commandBuffer">
      <return protocol="MTLCommandBuffer" />
    </method>

    <method selector="commandBufferWithUnretainedReferences">
      <return protocol="MTLCommandBuffer" />
    </method>

    <!-- Debugging with Xcode -->
    <method selector="insertDebugCaptureBoundary" />

    <!-- Identifying Properties -->
    <property name="device" protocol="MTLDevice" read-only />
    <property name="label" protocol="NSString" />
  </protocol>

  <protocol name="MTLComputeCommandEncoder" inherits="MTLCommandEncoder, NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLComputePipelineState" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLDepthStencilState" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLDevice" inherits="NSObject">
    <!-- Identifying Properties -->
    <!-- TODO: All missing -->
    
    <property name="depth24Stencil8PixelFormatSupported" getter="isDepth24Stencil8PixelFormatSupported" type="bool" read-only />
    <property name="headless" getter="isHeadless" type="bool" read-only />
    <property name="lowPower" getter="isLowPower" type="bool" read-only />
    <property name="maxThreadsPerThreadgroup" type="MTLSize" read-only />
    <property name="recommendedMaxWorkingSetSize" type="u64" read-only />
    <property name="name" protocol="NSString" read-only />

    <method selector="supportsFeatureSet:">
      <argument name="featureSet" type="MTLFeatureSet" />
      <return type="bool" />
    </method>

    <method selector="supportsTextureSampleCount:">
      <argument name="sampleCount" type="NSUInteger" />
      <return type="bool" />
    </method>

    <!-- Creating Metal Shader Libraries -->
    <method selector="newDefaultLibrary" />
    <!-- TODO: All missing -->
    
    <!-- Creating Command Queues -->
    <method selector="newCommandQueue">
      <return protocol="MTLCommandQueue" />
    </method>
    
    <method selector="newCommandQueueWithMaxCommandBufferCount">
      <argument name="maxCommandBufferCount" type="NSUInteger" />
      <return protocol="MTLCommandQueue" />
    </method>
    
    <!-- Creating Resources -->
    <method selector="newBufferWithLength:options:">
      <argument name="length" type="NSUInteger" />
      <argument name="options" type="MTLResourceOptions" />
      <return protocol="MTLBuffer" />
    </method>
    
    <method selector="newBufferWithBytes:length:options:">
      <argument name="pointer" type="*const std::os::raw::c_void" />
      <argument name="length" type="NSUInteger" />
      <argument name="options" type="MTLResourceOptions" />
      <return protocol="MTLBuffer" />
    </method>
    <!-- TODO: All missing -->
    <method selector="newFence">
      <return protocol="MTLFence" />
    </method>
    
    <method selector="newSamplerStateWithDescriptor:">
      <argument name="descriptor" protocol="MTLSamplerDescriptor" />
      <return protocol="MTLSamplerState" />
    </method>
    
    <!-- Creating Command Objects Needed to Render Graphics -->
    <!-- TODO: All missing -->
    <method selector="newDepthStencilStateWithDescriptor:">
      <argument name="descriptor" protocol="MTLDepthStencilDescriptor" />
      <return protocol="MTLDepthStencilState" />
    </method>

    <!-- Creating Command Objects Needed to Perform Computational Tasks -->
    <!-- TODO: All missing -->
    
    <!-- Instance Methods -->
    <!-- TODO: All missing -->
    
    <!-- TODO: This shouldn't be required -->
    <script type="trait">
fn new_library_with_file<T: NSString>(&self, filepath: T) -> Result<MTLLibraryID, NSErrorID> {
  let mut error = NSErrorID::nil();

  unsafe {
    let lib = msg_send![self.as_object(), newLibraryWithFile: filepath error: &mut error];

    if error.is_nil() {
      return Ok(lib);
    } else {
      return Err(error);
    }
  }
}

fn new_render_pipeline_state_with_descriptor<T: MTLRenderPipelineDescriptor>(&self, descriptor: T) -> Result<MTLRenderPipelineStateID, NSErrorID> {
  let mut error = NSErrorID::nil();

  unsafe {
    let lib = msg_send![self.as_object(), newRenderPipelineStateWithDescriptor: descriptor error: &mut error];

    if error.is_nil() {
      return Ok(lib);
    } else {
      return Err(error);
    }
  }
}
    </script>
    
    <script type="trait">
fn texture_sample_counts(&self) -> Vec<usize> where Self: 'static + Sized {
  let mut result = Vec::new();

  for i in 1 .. 128 {
    if self.supports_texture_sample_count(i) {
      result.push(i);
    }
  }

  return result;
}
    </script>
  </protocol>

  <protocol name="MTLDrawable" inherits="NSObject">
    <method selector="present" />
    <method selector="presentAtTime:">
      <argument name="presentationTime" type="CFTimeInterval" />
    </method>
  </protocol>

  <protocol name="MTLFence" inherits="NSObject">
    <!-- Properties -->
    <property name="device" protocol="MTLDevice" read-only />
    <property name="label" protocol="NSString" />
  </protocol>

  <protocol name="MTLFunction" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLHeap" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLLibrary" inherits="NSObject">
    <!-- Fetch a Non-Specialized Function -->
    <method selector="newFunctionWithName:">
      <argument name="functionName" protocol="NSString" />
      <return protocol="MTLFunction" />
    </method>

    <!-- Compile a Specialized Function -->
    <!-- TODO: newFunctionWithName:constantValues:completionHandler: -->
    <!-- TODO: newFunctionWithName:constantValues:error: -->

    <!-- Querying Library Contents -->
    <property name="functionNames" protocol="NSArray" element="NSString" read-only />

    <!-- Identifying Properties -->
    <property name="device" protocol="MTLDevice" read-only />
    <property name="label" protocol="NSString" />
  </protocol>

  <protocol name="MTLParallelRenderCommandEncoder" inherits="MTLCommandEncoder, NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLRenderCommandEncoder" inherits="MTLCommandEncoder, NSObject">
    <!-- Setting Graphics Rendering State -->
    <method selector="setBlendColorRed:green:blue:alpha:">
      <argument name="red" type="f32" />
      <argument name="green" type="f32" />
      <argument name="blue" type="f32" />
      <argument name="alpha" type="f32" />
    </method>

    <method selector="setCullMode:">
      <argument name="cullMode" type="MTLCullMode" />
    </method>

    <method selector="setDepthBias:slopeScale:clamp:">
      <argument name="depthBias" type="f32" />
      <argument name="slopeScale" type="f32" />
      <argument name="clamp" type="f32" />
    </method>

    <method selector="setDepthClipMode:">
      <argument name="depthClipMode" type="MTLDepthClipMode" />
    </method>

    <method selector="setDepthStencilState:">
      <argument name="depthStencilState" protocol="MTLDepthStencilState" />
    </method>

    <method selector="setFrontFacingWinding:">
      <argument name="frontFacingWinding" type="MTLWinding" />
    </method>

    <method selector="setRenderPipelineState:">
      <argument name="pipelineState" protocol="MTLRenderPipelineState" />
    </method>

    <method selector="setScissorRect:">
      <argument name="rect" type="MTLScissorRect" />
    </method>

    <method selector="setStencilFrontReferenceValue:backReferenceValue:">
      <argument name="frontReferenceValue" type="u32" />
      <argument name="backReferenceValue" type="u32" />
    </method>

    <method selector="setStencilReferenceValue:">
      <argument name="referenceValue" type="u32" />
    </method>

    <method selector="setTriangleFillMode:">
      <argument name="fillMode" type="MTLTriangleFillMode" />
    </method>

    <method selector="setViewport:">
      <argument name="viewport" type="MTLViewport" />
    </method>

    <method selector="setVisibilityResultMode:offset:">
      <argument name="mode" type="MTLVisibilityResultMode" />
      <argument name="offset" type="NSUInteger" />
    </method>

    <!-- Specifying Resources for a Vertex Shader Function -->
    <method selector="setVertexBuffer:offset:atIndex:">
      <argument name="buffer" protocol="MTLBuffer" />
      <argument name="offset" type="NSUInteger" />
      <argument name="index" type="NSUInteger" />
    </method>
    <!-- TODO: All missing -->

    <!-- Specifying Resources for a Fragment Shader Function -->
    <!-- TODO: All missing -->

    <!-- Specifying Tessellation Factors -->
    <!-- TODO: All missing -->

    <!-- Drawing Geometric Primitives -->
    <!-- TODO: All missing -->
    <method selector="drawPrimitives:vertexStart:vertexCount:">
      <argument name="primitiveType" type="MTLPrimitiveType" />
      <argument name="vertexStart" type="NSUInteger" />
      <argument name="vertexCount" type="NSUInteger" />
    </method>

    <!-- TODO: More missing -->

    <method selector="drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:">
      <argument name="primitiveType" type="MTLPrimitiveType" />
      <argument name="indexCount" type="NSUInteger" />
      <argument name="indexType" type="MTLIndexType" />
      <argument name="indexBuffer" protocol="MTLBuffer" />
      <argument name="indexBufferOffset" type="NSUInteger" />
    </method>
    <!-- TODO: drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset: -->

    <!-- Drawing Tessellated Patches -->
    <!-- TODO: All missing -->

    <!-- Enabling Texture Barriers -->
    <!-- TODO: All missing -->

    <!-- Specifying a Store Action -->
    <!-- TODO: All missing -->

    <!-- Performing Fence Operations -->
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLRenderPipelineState" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLResource" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLSamplerState" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>

  <protocol name="MTLTexture" inherits="NSObject">
    <!-- TODO: All missing -->
  </protocol>
</framework>
